generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Aircraft {
  id           String    @id @db.Uuid
  icaoCode     String    @unique @db.VarChar(4)
  shortName    String
  fullName     String
  registration String    @unique
  selcal       String
  livery       String
  Flight       Flight[]
  operator     Operator? @relation(fields: [operatorId], references: [id])
  operatorId   String?   @db.Uuid

  @@map("aircraft")
}

model Airport {
  id                String              @id @db.Uuid
  icaoCode          String              @unique @db.VarChar(4)
  iataCode          String              @unique @db.VarChar(3)
  name              String
  city              String
  country           String
  timezone          String
  AirportsOnFlights AirportsOnFlights[]

  @@map("airport")
}

model Operator {
  id        String     @id @db.Uuid
  icaoCode  String     @db.VarChar(4)
  shortName String
  fullName  String
  callsign  String
  aircrafts Aircraft[]
  flights   Flight[]

  @@map("operator")
}

model Flight {
  id           String              @id @db.Uuid
  flightNumber String
  callsign     String
  status       String
  aircraft     Aircraft            @relation(fields: [aircraftId], references: [id])
  aircraftId   String              @db.Uuid
  airports     AirportsOnFlights[]
  timesheet    Json
  operator     Operator            @relation(fields: [operatorId], references: [id])
  operatorId   String              @db.Uuid
  User         User?

  @@map("flight")
}

model AirportsOnFlights {
  airport     Airport @relation(fields: [airportId], references: [id])
  airportId   String  @db.Uuid
  flight      Flight  @relation(fields: [flightId], references: [id])
  flightId    String  @db.Uuid
  airportType String

  @@id([airportId, flightId])
  @@map("airport_flight")
}

model User {
  id              String            @id @db.Uuid
  name            String
  email           String            @unique
  password        String
  role            UserRole
  currentFlight   Flight?           @relation(fields: [currentFlightId], references: [id])
  currentFlightId String?           @unique @db.Uuid
  JwtRefreshToken JwtRefreshToken[]

  @@map("user")
}

model JwtRefreshToken {
  id        String   @id @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid
  token     String   @unique
  createdAt DateTime
  expiresAt DateTime

  @@map("jwt_refresh_token")
}

enum UserRole {
  CabinCrew
  Operations
  Admin
}
